import React, { useEffect, useState } from "react";
import { useForm } from "react-hook-form";
import { CVE_API } from "../../Configuration/Api";
import Skeleton from "react-loading-skeleton";
import db from "../../Assests/databse.jpg"


function ExploitsDB() {
    const { register, handleSubmit } = useForm({
        defaultValues: {
            search: ""
        }
    })
    const [list, setList] = useState([])
    const [select, setSelect] = useState("All")
    const [loading, setLoading] = useState(false);
    const [response, setResponse] = useState(false)
    const [limit, setLimit] = useState(20)


    const searchQuery = async (data) => {
        const filter = {
            search: data.search,
            limit: limit
        }
        setLoading(true)
        const result = await CVE_API(filter);
        if (result.status === 200) {
            setList(result?.data)
            setResponse(true);
            setLoading(false)
        }
        else {
            alert("Error into API Call");
            return
        }

    }
    return (
        <div className="text-center mt-2 container">
            <p className="fw-bold fs-2 text-capitalize">
                Search into exploits database
            </p>
            <form onSubmit={handleSubmit(searchQuery)}>
                <input {...register("search", { required: true })} className="w-50" type="text" placeholder="Search With The CVE Format " />
                <select className="ms-2 me-2" name="searchBy" value={select} onChange={(e) => setSelect(e.target.value)}>
                    <option value={"All"}>ALL</option>
                    <option value={"Id"}>By CVE ID</option>
                    <option value={"keyword"}>KeyWords</option>
                </select>
                <select className="ms-2 me-2" name="limit" value={limit} onChange={(e) => setLimit(e.target.value)}>
                    <option value={20}>20 Per Page</option>
                    <option value={50}>50 Per Page</option>
                    <option value={100}>100 Per Page</option>
                </select>
                <div className="m-2">
                    <input type="submit" className="w-25" value={"Search "} />
                </div>
            </form>

            {
                loading ?
                    <Skeleton count={25} />
                    :
                    response ?
                        <div>
                            <div>
                                <div className="row">
                                    <p className="fw-bold fs-2 text-start col">Total Results : {list?.totalResults}</p>
                                    <p className=" fs-2 text-end col">TimeStamps : {list?.timestamp}</p>
                                </div>
                                <p className="fw-bold fs-2 text-start">Results Per Page : {list?.resultsPerPage}</p>

                            </div>
                            {
                                list?.vulnerabilities?.map((item, index) => {
                                    const date = new Date(item.cve.published)
                                    const modify = new Date(item.cve.lastModified)
                                    console.log(item);
                                    return (

                                        <div key={index} className="text-start border m-1 p-1">
                                            <div className="row">
                                                <p className="col"><strong>ID : {item.cve.id}  </strong> </p>
                                                <p className="text-center col">
                                                    {
                                                        item.cve.metrics.cvssMetricV2[0].baseSeverity == "HIGH" ?
                                                            <strong className="bg-danger text-white p-1 m-1">{item.cve.metrics.cvssMetricV2[0].baseSeverity}</strong>
                                                            :
                                                            item.cve.metrics.cvssMetricV2[0].baseSeverity == "MEDIUM" ?
                                                                <strong className="bg-dark text-white p-1 m-1">{item.cve.metrics.cvssMetricV2[0].baseSeverity}</strong>
                                                                :
                                                                <strong className="bg-success text-white p-1 m-1">{item.cve.metrics.cvssMetricV2[0].baseSeverity}</strong>

                                                    }

                                                </p>
                                            </div>
                                            <p className="fw-bold"> Status : <span className="text-primary">{item.cve.vulnStatus} ({modify.getFullYear() + "-" + (1 + modify.getMonth()) + "-" + modify.getDate()})</span> </p>
                                            <p>{item.cve.descriptions[0].value} </p>
                                            <p className="fw-bold text-end"><span className="text-secondary">Published : {date.getFullYear() + "-" + (1 + date.getMonth()) + "-" + date.getDate()}  </span> </p>

                                           
                                        </div>

                                    )
                                })

                            }

                        </div>
                        :
                        <img src={db} style={{ width: "70%", height: "500px" }} />
            }

            {/* <table className="table container">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Severity</th>
                    </tr>
                </thead>
                <tbody>
                    {
                        list?.vulnerabilities?.map((item, index) => {
                            console.log(item);
                            return (

                                <tr key={index}>
                                    <td>{index + 1}</td>
                                    <td>{item.cve.id}</td>
                                    <td>{item.cve.id}</td>
                                    <td>{item.cve.id}</td>

                                </tr>

                            )
                        })

                    }

                </tbody>
            </table> */}
        </div>
    )
}

export default ExploitsDB
